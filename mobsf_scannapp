#!/bin/bash

#This script uploads apps to mobsf for evaluation when needed. 
#@Author: RB
#@version 0.3

BLUE='\033[0;36m'
RED='\033[0;31m'
GREEN='\033[1;32m'
NC='\033[0m'

set -e
set -o pipefail

appname="$1"

echo -e "${GREEN}[*] Checking if Mobsf is running ${NC}"
if [[ $(ps aux | grep mobsf) ]];
then
      echo -e "${RED}[*] Mobsf is not running, you should consider starting it.${NC}"
      echo -e "${GREEN}[*] Trying $(which mobsf) to start it${NC}"
      bash "$(which mobsf)"
      sleep 15;
else
      echo -e "${GREEN}[*] Mobsf is running${NC}"

fi

echo -e "${GREEN}[*] Asking some information like hostname, and port for mobsf ${NC}"
read -p "What is the mobsf hostname (default: localhost, press ENTER to continue): " mobsfhostname
if [ -z "${mobsfhostname}" ];
then
    mobsfhostname='localhost'
    echo -e "${GREEN}[*] No parameter entered. Attempting to set the hostname to $mobsfhostname. \n${NC}"
fi

read -p "What is the mobsf port (default: 8000, press ENTER to continue): " mobsfport
if [ -z "${mobsfport}" ];
then
    mobsfport=8000
    echo -e "${GREEN}[*] No parameter entered. Attempting to set the port to $mobsfport. \n${NC}"
fi

echo -e "${GREEN}[*] Attempting to pull api key from $mobsfhostname:$mobsfport (MobSF) ${NC}"
curl http://$mobsfhostname:$mobsfport/api_docs -o apidocs.file

echo -e "${GREEN}[*] Checking whether the apidocs.file is empty. If so, downloading it with credentials${NC}"

if [ ! -s apidocs.file ]
then
	read -p "What is the mobsf Username (default: mobsf): " mobsfusername
    if [ -z "${mobsfusername}" ];
    then
        mobsfusername='mobsf'
        echo -e "${GREEN}[*] No parameter entered. Attempting to set the username to $mobsfusername. \n${NC}"
    fi
	read -p "What is the mobsf Password (default: mobsf): " mobsfpassword
    if [ -z "${mobsfpassword}" ];
    then
        mobsfpassword='mobsf'
        echo -e "${GREEN}[*] No parameter entered. Attempting to set the password to $mobsfpassword. \n${NC}"
    fi
	curl --path-as-is -i -s -k -X $'POST' \
    	-H $'Host: $mobsfhostname:$mobsfport' -H $'User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:132.0) Gecko/20100101 Firefox/132.0' -H $'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' -H $'Accept-Language: en-US,en;q=0.5' -H $'Accept-Encoding: gzip, deflate, br' -H $'Content-Type: application/x-www-form-urlencoded' -H $'Content-Length: 114' -H $'Origin: http://$mobsfhostname:$mobsfport' -H $'Connection: keep-alive' -H $'Referer: http://$mobsfhostname:$mobsfport/login/?next=/api_docs' -H $'Upgrade-Insecure-Requests: 1' -H $'Sec-Fetch-Dest: document' -H $'Sec-Fetch-Mode: navigate' -H $'Sec-Fetch-Site: same-origin' -H $'Sec-Fetch-User: ?1' -H $'Priority: u=0, i' \
    	-b $'language=en; welcomebanner_status=dismiss; cookieconsent_status=dismiss; continueCode=vLeVxlRzkNb47vKDPMo5Lq8wdzVtvfkDuejdjn6EZm2ygrX19BpaQWOJY3oM' \
    	--data-binary $"csrfmiddlewaretoken=EfjRIamAWFiOFV9dnh06pIEmMvQ758BdtVQG9qp7qPcsYRXib4ZEWaVlLWpCPnWM&username=$mobsfusername&password=$mobsfpassword" \
    	$"http://$mobsfhostname:$mobsfport/login/?next=/api_docs" -o sessionid.file

	sessionid="$(grep -i "Set-Cookie" sessionid.file | awk -F " " '{ print $2 }' | awk -F ";" '{ print $1 }')"

	curl --path-as-is -i -s -k -X $'GET' \
    	-H $'Host: $mobsfhostname:$mobsfport' -H $'User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:132.0) Gecko/20100101 Firefox/132.0' -H $'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' -H $'Accept-Language: en-US,en;q=0.5' -H $'Accept-Encoding: gzip, deflate, br' -H $'Referer: http://$mobsfhostname:$mobsfport/login/?next=/api_docs' -H $'Connection: keep-alive' -H $'Upgrade-Insecure-Requests: 1' -H $'Sec-Fetch-Dest: document' -H $'Sec-Fetch-Mode: navigate' -H $'Sec-Fetch-Site: same-origin' -H $'Sec-Fetch-User: ?1' -H $'Priority: u=0, i' \
	    -b $"language=en; welcomebanner_status=dismiss; cookieconsent_status=dismiss; continueCode=vLeVxlRzkNb47vKDPMo5Lq8wdzVtvfkDuejdjn6EZm2ygrX19BpaQWOJY3oM; $sessionid" \
	    $"http://$mobsfhostname:$mobsfport/api_docs" -o apidocs.file
fi

api_key="$(grep -i "API Key: " apidocs.file | awk -F ">" '{ print $3 }' | awk -F "<" '{ print $1 }')"

if [ -z $api_key ]
then
	api_key="$(grep -i "REST API Key: " apidocs.file | awk -F ">" '{ print $3 }' | awk -F "<" '{ print $1 }')"
fi

#echo -e "${GREEN}[*] using the following API Key: ${api_key} ${NC}"
echo -e "${GREEN}[*] using the API key retrieved from MobSF ${NC}"

echo -e "${GREEN}[*] Uploading the file to MobSF ${NC}"
curl -F "file=@$appname" http://$mobsfhostname:$mobsfport/api/v1/upload -H "X-Mobsf-Api-Key: ${api_key}" 

echo -e "\n${GREEN}[*] Logging the MD5SUM needed for MobSF ${NC}"
md5sum_app=$(md5sum $appname | awk -F " " '{ print $1 }')
appfile=$(basename $appname)
echo "$md5sum_app" > app-$appfile-md5sum.log

echo -e "${GREEN}[*] Making sure the file is uploaded so sleeping 15 seconds${NC}"
sleep 15;

echo -e "${GREEN}\n[*] Attempting to start the scan on the app $appname \n${NC}"
curl -X POST --url http://$mobsfhostname:$mobsfport/api/v1/scan --data "scan_type=$EXTENSION&file_name=$appfile&hash=${md5sum_app}" -H "X-Mobsf-Api-Key: ${api_key}"  -H "Authorization: ${api_key}" | tee mobsf-$appname-json-scanoutput.log
